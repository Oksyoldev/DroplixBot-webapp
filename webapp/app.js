window.Telegram.WebApp.ready();

const balanceBtn = document.getElementById("balanceBtn");
const casesBtn = document.getElementById("casesBtn");
const profileBtn = document.getElementById("profileBtn");
const container = document.querySelector(".container");

function clearActive() {
  balanceBtn.classList.remove("active");
  casesBtn.classList.remove("active");
  profileBtn.classList.remove("active");
}

balanceBtn.addEventListener("click", async () => {
  clearActive();
  balanceBtn.classList.add("active");

  const user = await loadUser();

  if (!user) {
    container.innerHTML = "<p>–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è</p>";
    return;
  }
  container.innerHTML = `
    <img src="https://i.postimg.cc/3xL5hMSJ/20250619-1524-Droplix-Logo-Design-simple-compose-01jy429003e9srnd7yx1qqfdvj.png" alt="–õ–æ–≥–æ—Ç–∏–ø" class="logo" />
    <h1>üéÅ DroplixBot</h1>
    <p class="project-description">–û—Ç–∫—Ä–æ–π –∫–µ–π—Å—ã –∏ –ø–æ–ª—É—á–∏ —Ü–µ–Ω–Ω—ã–µ –ø—Ä–∏–∑—ã –ø—Ä—è–º–æ –≤ Telegram!</p>
    <div class="balance-page">
      <div class="balance-display">
        <span>–ë–∞–ª–∞–Ω—Å:</span>
        <span class="balance-amount">1000üí∞</span>
      </div>
      <button id="topUpBtn" class="btn-topup">–ü–æ–ø–æ–ª–Ω–∏—Ç—å –±–∞–ª–∞–Ω—Å</button>
    </div>
  `;

  document.getElementById("topUpBtn").addEventListener("click", () => {
    alert("–§—É–Ω–∫—Ü–∏—è –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è –ø–æ–∫–∞ –Ω–µ —Ä–µ–∞–ª–∏–∑–æ–≤–∞–Ω–∞.");
  });
});


casesBtn.addEventListener("click", () => {
  clearActive();
  casesBtn.classList.add("active");

  // –ú–µ–Ω—è–µ–º —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ
  container.innerHTML = `
    <h2>–ö–µ–π—Å—ã</h2>
    <div id="cases"></div>
    <div id="result" class="result-box"></div>
  `;

  // –ü–æ–¥–æ–∂–¥–µ–º, –ø–æ–∫–∞ DOM –æ–±–Ω–æ–≤–∏—Ç—Å—è, –∏ –≤—ã–∑–æ–≤–µ–º —Ñ—É–Ω–∫—Ü–∏—é
  setTimeout(() => {
    loadCases();
  }, 0);
});


profileBtn.addEventListener("click", () => {
  clearActive();
  profileBtn.classList.add("active");

  const user = window.Telegram.WebApp.initDataUnsafe?.user || {
    username: "username",
    id: "id"
  };

container.innerHTML = `
  <div class="profile-page scrollable">
    <img src="https://t.me/i/userpic/320/${user.id}.jpg" alt="–ê–≤–∞—Ç–∞—Ä" class="profile-avatar" />
    <p class="username">@${user.username || "–Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–æ"}</p>

    <div class="profile-actions">
  <button class="profile-btn">
    <span class="icon">‚úâÔ∏è</span>
    <span class="label">–ü–æ–¥–¥–µ—Ä–∂–∫–∞</span>
  </button>
  <div class="divider"></div>
  <button class="profile-btn">
    <span class="icon">üí¨</span>
    <span class="label">–ù–∞—à —á–∞—Ç</span>
  </button>
  <div class="divider"></div>
  <button class="profile-btn">
    <span class="icon">üåê</span>
    <span class="label">–Ø–∑—ã–∫</span>
  </button>
</div>


    <h3 class="section-title">üéâ –ò—Å—Ç–æ—Ä–∏—è –ø—Ä–∏–∑–æ–≤</h3>
    <ul class="history-list">
      <li>–ú–∏—à–∫–∞ üß∏ ‚Äî 18.06.2025</li>
      <li>Telegram Premium üéÅ ‚Äî 17.06.2025</li>
      <li>–ü—É—Å—Ç–æ üôÅ ‚Äî 16.06.2025</li>
    </ul>
  </div>
`;


  document.querySelector(".support-btn").addEventListener("click", () => {
    window.open("https://t.me/your_support_bot", "_blank");
  });
});

async function loadUser() {
  // –ü–æ–ª—É—á–∞–µ–º telegram_id –∏ username –∏–∑ Telegram WebApp –∏–ª–∏ –∑–∞–≥–ª—É—à–∫—É
  const user = window.Telegram.WebApp.initDataUnsafe?.user || { id: 123456789, username: "username" };

  try {
    const response = await fetch("http://localhost:8000/api/user", {
      method: "POST",
      headers: { "Content-Type": "application/json" },
      body: JSON.stringify({
        telegram_id: user.id,
        username: user.username
      })
    });

    if (!response.ok) throw new Error("–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è");

    const data = await response.json();
    return data; // {telegram_id, username, balance, history}
  } catch (e) {
    console.error(e);
    return null;
  }
}

async function updateBalance(telegram_id, amount) {
  try {
    const response = await fetch("http://localhost:8000/api/user/balance", {
      method: "POST",
      headers: { "Content-Type": "application/json" },
      body: JSON.stringify({ telegram_id, amount })
    });
    if (!response.ok) throw new Error("–û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –±–∞–ª–∞–Ω—Å–∞");
    const data = await response.json();
    return data.balance;
  } catch (e) {
    console.error(e);
    return null;
  }
}


// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ –∫–µ–π—Å–æ–≤ —Å —Å–µ—Ä–≤–µ—Ä–∞ –∏ —Å–æ–∑–¥–∞–Ω–∏—è –∫–Ω–æ–ø–æ–∫
async function loadCases() {
  const casesContainer = document.getElementById("cases");
  const resultBox = document.getElementById("result");
  try {
    const response = await fetch("https://droplixbot.onrender.com/api/cases");
    const cases = await response.json();

    casesContainer.innerHTML = ""; // –æ—á–∏—Å—Ç–∏—Ç—å –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä

    cases.forEach(c => {
      const btn = document.createElement("button");
      btn.innerText = c.name;
      btn.className = "case-button";  // –¥–ª—è —Å—Ç–∏–ª–µ–π, –µ—Å–ª–∏ –Ω—É–∂–Ω–æ
      btn.onclick = () => openCase(c.id);
      casesContainer.appendChild(btn);
    });
  } catch (err) {
    resultBox.innerText = "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –∫–µ–π—Å–æ–≤";
  }
}

// –§—É–Ω–∫—Ü–∏—è –æ—Ç–∫—Ä—ã—Ç–∏—è –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ –∫–µ–π—Å–∞
async function openCase(caseId) {
  const resultBox = document.getElementById("result");
  resultBox.innerText = "–û—Ç–∫—Ä—ã–≤–∞–µ–º –∫–µ–π—Å... üé≤";

  try {
    const response = await fetch(`https://droplixbot.onrender.com/api/open-case?case_id=${caseId}`);
    const data = await response.json();

    if(data.error) {
      resultBox.innerText = "‚ùå " + data.error;
    } else {
      resultBox.innerText = `üî• –í–∞–º –≤—ã–ø–∞–ª–æ: ${data.prize}`;
    }
  } catch (err) {
    resultBox.innerText = "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–∫—Ä—ã—Ç–∏–∏ –∫–µ–π—Å–∞";
  }
}

// –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –≤–∫–ª–∞–¥–∫—É –ë–∞–ª–∞–Ω—Å
balanceBtn.click();
