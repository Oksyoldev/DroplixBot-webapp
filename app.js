const casesContainer = document.getElementById("cases");
const resultBox = document.getElementById("result");

async function loadCases() {
  try {
    const response = await fetch("https://droplixbot.onrender.com/api/cases");
    const cases = await response.json();

    casesContainer.innerHTML = ""; // –æ—á–∏—Å—Ç–∏—Ç—å

    cases.forEach(c => {
      const btn = document.createElement("button");
      btn.innerText = c.name;
      btn.className = "case-button";  // –¥–ª—è —Å—Ç–∏–ª–µ–π, –µ—Å–ª–∏ –Ω—É–∂–Ω–æ
      btn.onclick = () => openCase(c.id);
      casesContainer.appendChild(btn);
    });
  } catch (err) {
    resultBox.innerText = "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –∫–µ–π—Å–æ–≤";
  }
}

async function openCase(caseId) {
  resultBox.innerText = "–û—Ç–∫—Ä—ã–≤–∞–µ–º –∫–µ–π—Å... üé≤";

  try {
    const response = await fetch(`https://droplixbot.onrender.com/api/open-case?case_id=${caseId}`);
    const data = await response.json();

    if(data.error) {
      resultBox.innerText = "‚ùå " + data.error;
    } else {
      resultBox.innerText = `üî• –í–∞–º –≤—ã–ø–∞–ª–æ: ${data.prize}`;
    }
  } catch (err) {
    resultBox.innerText = "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–∫—Ä—ã—Ç–∏–∏ –∫–µ–π—Å–∞";
  }
}

// –ó–∞–ø—É—Å–∫–∞–µ–º –∑–∞–≥—Ä—É–∑–∫—É –∫–µ–π—Å–æ–≤ –ø–æ—Å–ª–µ –∑–∞–≥—Ä—É–∑–∫–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
window.Telegram.WebApp.ready();
loadCases();
